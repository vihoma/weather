name: "Pylint"

permissions:
  contents: read

on:
  push:
    branches:
    - master
    - release/*
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  gh-pylint:
    if: ${{ !github.event.act }} # skip during local actions testing
    name: PyLint on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-deps: ["pylint", "python-dotenv", "pyowm", "rich"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ${{ matrix.python-deps }}
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
  local-pylint:
    if: ${{ github.event.act }} # skip during local actions testing
    name: PyLint on Python ${{ matrix.python-version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11"]
        os: [windows-latest]
        python-deps: ["pylint", "python-dotenv", "pyowm", "rich"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ${{ matrix.python-deps }}
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
